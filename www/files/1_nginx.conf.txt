worker_processes auto; # The rule is 1 worker process per cpu core. DO NOT EXCEED (check with: nproc)
events {
  # FORMULA: (worker_processes x worker_connections) = max connections to the server
  worker_connections 1024;
}

http {
  include mime.types; # Allows the server to render various formats of files sent
  access_log off; # Turns off writes to access_log, can be turned on at directive levels.

  # Enable Compressed Responses & Set a compression level based off benchmarking,
  # Levels higher than 5 should be rigorously tested prior to implementation into production
  gzip on;
  gzip_comp_level 3; # 0-9 levels. 3 to 4 is usually good.
  #gzip_types text/css text/javascript; # types of files to apply compression...USE THIS FORMAT FOR LEGIBILITY (16-17):
  gzip_types text/css;
  gzip_types text/javascript;

  # Buffer size for POST Submissions
  client_body_buffer_size 10k;
  client_max_body_size 8m;

  # Buffer size for Headers
  client_header_buffer_size 1k;

  # Max time to receive client headers/body
  client_header_timeout 12;
  client_body_timeout 12;

  # Max Connection KeepAlive Timeout
  keepalive_timeout 15;

  # Max time for client accept/receive Response
  send_timeout 10;

  # Skip buffering for static files
  sendfile on;

  # Optimizing sendfile packets
  tcp_nopush on;

  #############################################################
  ### MICRO-CACHING TO BE IMPLEMENTED IN V2. -> USING REDIS. ##
  #############################################################


  #####################################################
  ### ??????????????????? HTTP/2 ?????????????????? ###
  #####################################################
  # HTTP1.1 is a textual protocol
  # HTTP2 was meant to be a persistent multiplex streaming binary connection protocol with compressed headers and
  # the ability to server push. HTTP/2 has some issues that should be noted:
  # For More Info: https://almanac.httparchive.org/en/2019/http#http2-issues.
  # HTTP3 is now the expected future standard. Will be implemented at a later date once available and ready for test.

  server {
    server_name <BASE_FQDN> <www.FQDN> <SERVER_IP>;

    root <PATH TO STATIC SERVED ASSETS>; # Example: /sites/www

    # NGINX Performance Configs
    location ~* \.(css|js|png|jpg)$ {
      #add_header my_header "Hello World"; # Setting custom headers
      add_header Pragma public;
      add_header Vary Accept-Encoding;
      expires 1M; # Expires 1 month from now
    }

   ###################################################################################################
   # Server Pushing Demo
   ###################################################################################################
   location = /index.html {
     http2_push /style/main.css; # Checking with nghttp -nys[a] https://troveofgems.tech/index.html, * indicator
   }

    listen 443 ssl http2; # Listen on port 443, use ssl module, and set http2 protocol
    ssl_certificate <PATH_TO_KEY>/public_key.pem; # Self Signed or LetsEncrypt/CertBot
    ssl_certificate_key <PATH_TO_KEY>/private_key.pem; # Self Signed or LetsEncrypt/CertBot
}